@import "settings";

@mixin apply-value-to-props($props, $value) {
    @if length($props) {
        @each $prop in $props {
            #{$prop}: $value;
        }
    }
    @else {
        @error "No properties were passed"
    }
}

@mixin spacing($props, $size: m) {
    @if map-has-key($spacing-modifiers, $size) {

        @include apply-value-to-props($props, $spacing-base * map-get($spacing-modifiers, $size));
    }
    @else {
        @error "Could not find spacing size #{$size}"
    }
}

@mixin full-width {
    width: 100% !important;
}

@mixin full-width-content($responsive: false) {
    @include full-width;
    max-width: $max-width;
    @include apply-value-to-props(margin-left margin-right, auto);

    @if $responsive {
      @media(max-width: $max-width-breakpoint) {
        @include spacing(padding-left padding-right, m);
      }
    }
}

@mixin background-shade {
  background: $shade;
}

@mixin title($type: null) {
  @include spacing(margin-bottom, l);

  font-family: 'Playfair Display', serif;
  font-weight: 300;
  font-size: 45px;
  letter-spacing: 1px;

  @if($type == "secondary") {
    @include spacing(margin-bottom, m);
    font-size: 30px;
  }
  @else if($type == "tertiary") {
    @include spacing(margin-bottom, s);
    font-size: 22px;
  }
}


